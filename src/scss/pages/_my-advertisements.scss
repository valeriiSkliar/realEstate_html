// src/scss/pages/_my-advertisements.scss
@use "../brand_color" as brand;
@use "../variables" as vars;

.my-listings-page {
  padding: 1rem 0; // Consistent padding

  .page-header {
    // Uses utility classes, specific styling might not be needed unless overrides are required
  }

  .brand-button--solid {
    // Assuming this uses the global brand-button styles
    // No specific override needed here unless unique to this page
  }

  .listings-controls {
    brand-button {
      &.brand-button--turquoise {
        min-width: 150px;
        width: 100%;
      }
    }
    a {
      text-decoration: none;
      color: inherit;
    }

    .my-listings-sort-group {
      // Переопределяем Bootstrap стили для полной ширины
      display: flex !important;
      width: 100%;

      .btn {
        min-width: 60px;
        width: 100%;
        height: 40px;
        flex: 1;
        background-color: transparent !important;
        color: brand.$turquoise !important;
        transition: all 0.3s ease;
        display: flex;
        justify-content: center;
        align-items: center;

        span {
          transition: all 0.3s ease;
          color: brand.$turquoise;
          font-size: 1.2em;
        }

        &:hover,
        &:focus {
          background-color: rgba(brand.$turquoise, 0.1) !important;
          color: brand.$turquoise !important;
          border-color: brand.$turquoise !important;
          box-shadow: none !important;
        }

        &.active {
          background-color: brand.$turquoise !important;
          color: white !important;
          border-color: brand.$turquoise !important;

          span {
            color: white;
          }

          &:hover {
            background-color: darken(brand.$turquoise, 10%) !important;
          }
        }

        &:focus {
          box-shadow: none !important;
          outline: none !important;
        }

        // Обеспечиваем правильное отображение первой и последней кнопки
        &:first-child {
          border-top-left-radius: 0.375rem;
          border-bottom-left-radius: 0.375rem;
          border-right: none !important;
        }

        &:last-child {
          border-top-right-radius: 0.375rem;
          border-bottom-right-radius: 0.375rem;
          border-left: none !important;
        }

        &:not(:first-child):not(:last-child) {
          border-radius: 0;
          border-left: none !important;
          border-right: none !important;
        }
      }
    }

    .small.text-brand-dark-navy-50 {
      color: brand.$dark-navy-50;
    }
  }

  .my-listings-list {
    display: flex;
    flex-direction: column;
    gap: 1rem; // Space between cards
  }

  // Styles for my-advertisement-card are within its Shadow DOM
  // but if there are any container-level effects or overrides:
  my-advertisement-card {
    // Example: if you want to add a border around the host element itself
    // border: 1px solid #e0e0e0;
    // border-radius: 12px; // Should match internal card radius
  }
}

// Ensure Bootstrap icons are available or include them if not globally scoped
// For example, if custom elements' shadow DOM doesn't inherit global styles:
// @import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css");
